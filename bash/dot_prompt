declare -r MAX_PATH_LENGTH=40
declare -r GIT_PS1_SHOWDIRTYSTATE=true

declare -r COLOR_PATH="\[\e[34;1m\]"
declare -r COLOR_EXTRAS="\[\e[35m\]"
declare -r COLOR_USER=""
declare -r COLOR_ROOT="\[\e[1;31;40m\]"
declare -r COLOR_HOST=""
declare -r COLOR_RESET="\[\e[0m\]"

function prompt_path {
  declare path="$1"
  declare prefix

  [[ "$path" =~ (~) ]] && prefix="~/"

  if (( ${#path} > $MAX_PATH_LENGTH )); then
    path=${path: -$(($MAX_PATH_LENGTH - ${#prefix}))}
    [[ "$path" =~ ^[^/]*/(.*) ]] && path="$prefix(...)${BASH_REMATCH[1]}"
  fi

  echo $path
}

function prompt_git {
  [[ $(type -t __git_ps1) ]] || return
  declare branch="$(__git_ps1 '%s')"
  if [[ ! -z "$branch" ]]; then 
    echo "  [$branch]"
  fi
}

function prompt_rvm {
  [[ -f ~/.rvm/bin/rvm-prompt ]] || return
  echo "  [$(~/.rvm/bin/rvm-prompt i v g s)]"
}

function prompt_jobs {
  declare num_jobs=$1
  declare jobs_str

  case $num_jobs in
    (0) return ;;
    (1) jobs_str="job";;
    (*) jobs_str="jobs";;
  esac

  echo "  [$num_jobs $jobs_str]"
}

declare color_by_id

case $EUID in
  (0) color_by_id=$COLOR_ROOT ;;
  (*) color_by_id=$COLOR_USER ;;
esac

PS1="$COLOR_RESET( $color_by_id\u$COLOR_RESET@$COLOR_HOST\h$COLOR_RESET:$COLOR_PATH\$(prompt_path '\w')$COLOR_RESET$COLOR_EXTRAS\$(prompt_rvm)\$(prompt_git)\$(prompt_jobs \j)$COLOR_RESET )\n\$ "

# vim: set filetype=sh :
